snippet dfr "defer recover"
defer func() {
	if err := recover(); err != nil {
		${0}
	}
}()
endsnippet

snippet ggm "go generate mockery"
//go:generate mockery -name=${0} -case=underscore -inpkg
endsnippet

snippet sortasc "sort ascending"
sort.Slice(${1}, func(a, b int) bool {
	return ${1///g}[a] < ${1///g}[b]
})
endsnippet

snippet sortdesc "sort descending"
sort.Slice(${1}, func(a, b int) bool {
	return ${1///g}[a] > ${1///g}[b]
})
endsnippet

snippet sorter "sorter"
type Sorter []${1}

func (s Sorter) Len() int {
	return len(s)
}

func (s Sorter) Less(a, b int) bool {
	${2}
}

func (s Sorter) Swap(a, b int) {
	s[a], s[b] = s[b], s[a]
}
endsnippet
