snippet dfr "defer recover"
	defer func() {
		if err := recover(); err != nil {
			${0}
		}
	}()

snippet ggm "go generate mockery"
	//go:generate mockery -name=${0} -case=underscore -inpkg

snippet bufwr "buffered writer"
	type Writer interface {
		Printf(format string, a ...interface{})
		Flush()
	}

	type writerImpl struct {
		*bufio.Writer
	}

	func NewWriter(writer io.Writer) Writer {
		return &writerImpl{Writer: bufio.NewWriter(writer)}
	}

	func (impl *writerImpl) Printf(f string, a ...interface{}) {
		fmt.Fprintf(impl.Writer, f, a...)
	}

	func (impl *writerImpl) Flush() {
		impl.Writer.Flush()
	}

snippet wscn "word scanner"
	type WordScanner interface {
		NextInt() int
		NextInt64() int64
		NextString() string
	}

	type wordScannerImpl struct {
		*bufio.Scanner
	}

	func NewWordScanner(reader io.Reader) WordScanner {
		s := bufio.NewScanner(reader)
		s.Split(bufio.ScanWords)
		return &wordScannerImpl{Scanner: s}
	}

	func (impl *wordScannerImpl) NextInt() int {
		impl.Scan()
		bb := impl.Bytes()
		i := 0
		for _, b := range bb {
			i *= 10
			i += int(b - '0')
		}
		return i
	}

	func (impl *wordScannerImpl) NextInt64() int64 {
		impl.Scan()
		bb := impl.Bytes()
		i := int64(0)
		for _, b := range bb {
			i *= 10
			i += int64(b - '0')
		}
		return i
	}

	func (impl *wordScannerImpl) NextString() string {
		impl.Scan()
		return impl.Text()
	}
